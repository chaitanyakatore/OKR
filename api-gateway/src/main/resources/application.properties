spring.application.name=api-gateway
server.port=8060

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# Configure Keycloak as the JWT issuer
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/myapp
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/myapp/protocol/openid-connect/certs

# Manual Gateway Route Configuration
spring.cloud.gateway.routes[0].id=objective-service
spring.cloud.gateway.routes[0].uri=lb://objective-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/objective/**

spring.cloud.gateway.routes[1].id=key-result-service
spring.cloud.gateway.routes[1].uri=lb://key-result-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/keyresults/**

spring.cloud.gateway.routes[2].id=task-service
spring.cloud.gateway.routes[2].uri=lb://task-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/tasks/**


spring.cloud.gateway.routes[3].id=team-service
spring.cloud.gateway.routes[3].uri=lb://team-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/teams/**

spring.cloud.gateway.routes[4].id=project-service
spring.cloud.gateway.routes[4].uri=lb://project-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/projects/**

spring.cloud.gateway.routes[5].id=team-service
spring.cloud.gateway.routes[5].uri=lb://team-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/teams/**

spring.cloud.gateway.routes[6].id=reg-keycloak
spring.cloud.gateway.routes[6].uri=lb://reg-keycloak
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/**


#spring.cloud.gateway.routes[0].filters[0]=AuthenticationFilter
#spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter
#spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter
#spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter
#spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter
#spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter
